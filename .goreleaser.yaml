before:
  hooks:
    - go mod tidy
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows

env:
  - OCI_DESCRIPTION="Generate a release note based on Git repository."
  - OCI_AUTHORS=beram.job@gmail.com
  - OCI_LICENCES=GPL-3.0-or-later

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^test:'
      - '^ci:'
      - '^chore:'
      - 'merge conflict'
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
  groups:
    - title: 'Features'
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 100
    - title: 'Fixes'
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 200
    - title: 'Documentation updates'
      regexp: ^.*?docs(\([[:word:]]+\))??!?:.+$
      order: 400
    - title: 'Other work'
      order: 9999

dockers:
- image_templates:
  - "releaseros/releaseros:{{ .Version }}-amd64"
  - "ghcr.io/releaseros/releaseros:{{ .Version }}-amd64"
  use: buildx
  dockerfile: Dockerfile
  build_flag_templates:
  - "--label=org.opencontainers.artifact.created={{.Date}}"
  - "--label=org.opencontainers.artifact.description={{.Env.OCI_DESCRIPTION}}"
  - "--label=org.opencontainers.image.description={{.Env.OCI_DESCRIPTION}}"
  - "--label=org.opencontainers.image.created={{.Date}}"
  - "--label=org.opencontainers.image.authors={{.Env.OCI_AUTHORS}}"
  - "--label=org.opencontainers.image.source={{.GitURL}}"
  - "--label=org.opencontainers.image.version={{.Version}}"
  - "--label=org.opencontainers.image.revision={{.FullCommit}}"
  - "--label=org.opencontainers.image.licenses={{.Env.OCI_LICENCES}}"
  - "--label=org.opencontainers.image.title={{.ProjectName}}"
  - "--platform=linux/amd64"
- image_templates:
  - "releaseros/releaseros:{{ .Version }}-arm64"
  - "ghcr.io/releaseros/releaseros:{{ .Version }}-arm64"
  use: buildx
  goarch: arm64
  dockerfile: Dockerfile
  build_flag_templates:
  - "--label=org.opencontainers.artifact.created={{.Date}}"
  - "--label=org.opencontainers.artifact.description={{.Env.OCI_DESCRIPTION}}"
  - "--label=org.opencontainers.image.description={{.Env.OCI_DESCRIPTION}}"
  - "--label=org.opencontainers.image.created={{.Date}}"
  - "--label=org.opencontainers.image.authors={{.Env.OCI_AUTHORS}}"
  - "--label=org.opencontainers.image.source={{.GitURL}}"
  - "--label=org.opencontainers.image.version={{.Version}}"
  - "--label=org.opencontainers.image.revision={{.FullCommit}}"
  - "--label=org.opencontainers.image.licenses={{.Env.OCI_LICENCES}}"
  - "--label=org.opencontainers.image.title={{.ProjectName}}"
  - "--platform=linux/arm64"

docker_manifests:
- name_template: "ghcr.io/releaseros/releaseros:{{ .Version }}"
  image_templates:
  - "ghcr.io/releaseros/releaseros:{{ .Version }}-amd64"
  - "ghcr.io/releaseros/releaseros:{{ .Version }}-arm64"
- name_template: "ghcr.io/releaseros/releaseros:latest"
  image_templates:
  - "ghcr.io/releaseros/releaseros:{{ .Version }}-amd64"
  - "ghcr.io/releaseros/releaseros:{{ .Version }}-arm64"
- name_template: "releaseros/releaseros:{{ .Version }}"
  image_templates:
  - "releaseros/releaseros:{{ .Version }}-amd64"
  - "releaseros/releaseros:{{ .Version }}-arm64"
- name_template: "releaseros/releaseros:latest"
  image_templates:
  - "releaseros/releaseros:{{ .Version }}-amd64"
  - "releaseros/releaseros:{{ .Version }}-arm64"

# The lines beneath this are called `modelines`. See `:help modeline`.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
